name: Build
on:
  push:
    tags:
      - "v*"
    paths:
      - ".github/workflows/build.yml"
  workflow_dispatch:

jobs:
  build_webpack:
    runs-on: ubuntu-latest
    jobs:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: yarn

      - uses: actions/cache@v3
        id: cache-node_modules
        env:
          cache-name: cache-node_modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./yarn.lock') }}

      - name: Install dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install
      
      - name: Build
        run: yarn build:webpack
      
      - name: Upload build
        uses: actions/upload-artifact@v3
        path: |
          dist/

  build_bin:
    needs:
      - build_webpack
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - os: ubuntu-latest
            task: "build:electron:linux"
            dist_path: |
              build/SSH Log Viewer*.AppImage
          - os: macos-latest
            task: "build:electron:mac"
            dist_path: |
              build/SSH Log Viewer*.dmg
          - os: windows-latest
            task: "build:electron:win"
            dist_path: |
              build/SSH Log Viewer*.exe
              build/SSH Log Viewer*.AppImage

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: yarn

      - uses: actions/cache@v3
        id: cache-node_modules
        env:
          cache-name: cache-node_modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./yarn.lock') }}

      - name: Install dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Download webpacked code
        uses: actions/download-artifact@v3
        with:
          name: slv-webpack
          path: |
            dist/

      - name: Build
        run: |
          yarn ${{ matrix.task }}

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: slv-${{ matrix.os }}
          path: |
            ${{ matrix.dist_path }}

  upload_release:
    runs-on: ubuntu-latest
    needs:
      - build_linux
      - build_mac
      - build_win
    steps:
      - name: Make directory
        run: mkdir -p release
      - name: Download windows package
        uses: actions/download-artifact@v3
        with:
          name: slv-windows-latest
          path: |
            build/
      - name: Download mac package
        uses: actions/download-artifact@v3
        with:
          name: slv-macos-latest
          path: |
            build/
      - name: Download linux package
        uses: actions/download-artifact@v3
        with:
          name: slv-ubuntu-latest
          path: |
            build/
      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ (startsWith(github.ref_name, 'v') && github.ref_name) || 'head' }}
          prerelease: ${{ !startsWith(github.ref_name, 'v') }}
          tag_name: ${{ (startsWith(github.ref_name, 'v') && github.ref_name) || 'head' }}
          files: build/*

